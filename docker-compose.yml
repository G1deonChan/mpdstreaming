version: '3.8'

services:
  mpdstreaming:
    # 使用Docker Hub镜像 (推荐)
    image: xinmeng96/mpdstreaming:latest
    # 或者使用GitHub Container Registry:
    # image: ghcr.io/g1deonchan/mpdstreaming:latest
    # 或者本地构建:
    # build: .
    container_name: mpd-hls-streamer
    ports:
      - "8080:8080"
    volumes:
      # 配置文件将由容器自动创建，也可以通过volume挂载自定义配置
      # - ./config.yaml:/app/config.yaml:ro
      - mpd-config:/app/config
      - ./logs:/app/logs
      - /tmp/hls:/tmp/hls
    environment:
      - CONFIG_PATH=/app/config/config.yaml
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python3", "/app/healthcheck.py", "--quiet"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mpd-network

  # Nginx反向代理和HLS文件服务
  nginx:
    image: nginx:alpine
    container_name: mpd-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - /tmp/hls:/usr/share/nginx/html/hls:ro
    depends_on:
      - mpdstreaming
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - mpd-network

  # 监控服务 (可选，使用 --profile monitoring 启用)
  monitor:
    build: .
    container_name: mpd-monitor
    volumes:
      - ./logs:/app/logs
    environment:
      - PYTHONUNBUFFERED=1
    command: ["python3", "/app/monitor.py", "--url", "http://mpdstreaming:8080", "--continuous", "--interval", "60"]
    depends_on:
      - mpdstreaming
    restart: unless-stopped
    networks:
      - mpd-network
    profiles:
      - monitoring

networks:
  mpd-network:
    driver: bridge

volumes:
  logs:
  mpd-config:
    driver: local
